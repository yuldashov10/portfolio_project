services:

  db:
    image: postgres:15.3-alpine
    container_name: pgdb
    env_file:
      - backend/.env.database
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - backend_network

  backend:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    container_name: backend
    env_file:
      - backend/.env
    entrypoint: ['/entrypoint.sh']
    volumes:
      - static_volume:/backend_static
      - media_volume:/app/media/
    depends_on:
      - db
    networks:
      - backend_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    command: cp -r /app/build/. /frontend_static/
    volumes:
      - static_volume:/frontend_static
    depends_on:
      - backend
    networks:
      - backend_network

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: gateway
    restart: always
    env_file:
      - ./nginx/.env.nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/staticfiles/
      - media_volume:/var/html/media/
    ports:
      - '${NGINX_HOST_PORT}:${CONTAINER_PORT}'
    depends_on:
      - backend
      - frontend
    networks:
      - backend_network

volumes:
  pg_data:
  static_volume:
  media_volume:

networks:
  backend_network:
    driver: bridge
